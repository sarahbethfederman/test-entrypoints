// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Item render a button when there is not a href 1`] = `
.c1 {
  height: 3rem;
  color: rgba(0,192,165,1);
  font-size: var(--lendi-ui-size);
  line-height: calc(24 / 16);
  font-family: 'Open Sans',sans-serif;
  padding-left: calc(1.5 * var(--lendi-ui-size));
  padding-right: calc(1.5 * var(--lendi-ui-size));
  font-weight: 600;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-bottom: 1px solid rgba(227,227,227,1);
  padding-top: 0;
  padding-bottom: 0;
  border-top: none;
  border-right: none;
  border-left: none;
  background-color: transparent;
  width: 100%;
  outline: none;
}

.c1:hover {
  color: rgba(255,255,255,1);
  background-color: rgba(0,192,165,1);
}

.c1:hover svg {
  stroke: rgba(255,255,255,1);
}

.c1:active {
  color: rgba(255,255,255,1);
  background-color: rgba(0,153,132,1);
}

.c1:last-type {
  border-bottom: none;
}

.c0 {
  height: 3rem;
  color: rgba(0,192,165,1);
  font-size: var(--lendi-ui-size);
  line-height: calc(24 / 16);
  font-family: 'Open Sans',sans-serif;
  padding-left: calc(1.5 * var(--lendi-ui-size));
  padding-right: calc(1.5 * var(--lendi-ui-size));
  font-weight: 600;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-bottom: 1px solid rgba(227,227,227,1);
  padding: 0;
  list-style: none;
}

.c0:hover {
  color: rgba(255,255,255,1);
  background-color: rgba(0,192,165,1);
}

.c0:hover svg {
  stroke: rgba(255,255,255,1);
}

.c0:active {
  color: rgba(255,255,255,1);
  background-color: rgba(0,153,132,1);
}

.c0:last-type {
  border-bottom: none;
}

.c0 > a {
  border-bottom: 0;
}

.c0 > button {
  border-bottom: 0;
}

<Item>
  <styled.li
    role="none"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-iwsKbI",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              "
  ",
              [Function],
              " ",
              "
    padding-left: ",
              "calc(1.5 * var(--lendi-ui-size))",
              ";
    padding-right: ",
              "calc(1.5 * var(--lendi-ui-size))",
              ";
  ",
              "
  font-weight: 600;
  cursor: pointer;
  display: flex;
  align-items: center;
  border-bottom: 1px solid ",
              [Function],
              ";

  :hover {
    ",
              "
          color: ",
              [Function],
              ";
        ",
              " ",
              "
          background-color: ",
              [Function],
              ";
        ",
              ";

    svg {
      stroke: ",
              [Function],
              ";
    }
  }

  :active {
    ",
              "
          color: ",
              [Function],
              ";
        ",
              " ",
              "
          background-color: ",
              [Function],
              ";
        ",
              ";
  }

  :last-type {
    border-bottom: none;
  }
",
              ";
  padding: 0;
  list-style: none;

  > a {
    border-bottom: 0;
  }

  > button {
    border-bottom: 0;
  }
",
            ],
          },
          "displayName": "styled.li",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-iwsKbI",
          "target": "li",
          "toString": [Function],
          "usesTheme": false,
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      role="none"
    >
      <li
        className="c0"
        role="none"
      >
        <styled.button
          depth={0}
          onClick={[Function]}
        >
          <StyledComponent
            depth={0}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htoDjs",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  ",
                    "
  ",
                    [Function],
                    " ",
                    "
    padding-left: ",
                    "calc(1.5 * var(--lendi-ui-size))",
                    ";
    padding-right: ",
                    "calc(1.5 * var(--lendi-ui-size))",
                    ";
  ",
                    "
  font-weight: 600;
  cursor: pointer;
  display: flex;
  align-items: center;
  border-bottom: 1px solid ",
                    [Function],
                    ";

  :hover {
    ",
                    "
          color: ",
                    [Function],
                    ";
        ",
                    " ",
                    "
          background-color: ",
                    [Function],
                    ";
        ",
                    ";

    svg {
      stroke: ",
                    [Function],
                    ";
    }
  }

  :active {
    ",
                    "
          color: ",
                    [Function],
                    ";
        ",
                    " ",
                    "
          background-color: ",
                    [Function],
                    ";
        ",
                    ";
  }

  :last-type {
    border-bottom: none;
  }
",
                    " ",
                    "
  ",
                    "
    padding-top: ",
                    "0",
                    ";
    padding-bottom: ",
                    "0",
                    ";
  ",
                    ";
  border-top: none;
  border-right: none;
  border-left: none;
  background-color: transparent;
  width: 100%;
  outline: none;
",
                    ";
",
                  ],
                },
                "displayName": "styled.button",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-htoDjs",
                "target": "button",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            onClick={[Function]}
          >
            <button
              className="c1"
              onClick={[Function]}
            >
              Foo Bar
            </button>
          </StyledComponent>
        </styled.button>
      </li>
    </StyledComponent>
  </styled.li>
</Item>
`;

exports[`Item render a link when there is a href 1`] = `
.c1 {
  height: 3rem;
  color: rgba(0,192,165,1);
  font-size: var(--lendi-ui-size);
  line-height: calc(24 / 16);
  font-family: 'Open Sans',sans-serif;
  padding-left: calc(1.5 * var(--lendi-ui-size));
  padding-right: calc(1.5 * var(--lendi-ui-size));
  font-weight: 600;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-bottom: 1px solid rgba(227,227,227,1);
  -webkit-text-decoration: none;
  text-decoration: none;
  width: 100%;
}

.c1:hover {
  color: rgba(255,255,255,1);
  background-color: rgba(0,192,165,1);
}

.c1:hover svg {
  stroke: rgba(255,255,255,1);
}

.c1:active {
  color: rgba(255,255,255,1);
  background-color: rgba(0,153,132,1);
}

.c1:last-type {
  border-bottom: none;
}

.c0 {
  height: 3rem;
  color: rgba(0,192,165,1);
  font-size: var(--lendi-ui-size);
  line-height: calc(24 / 16);
  font-family: 'Open Sans',sans-serif;
  padding-left: calc(1.5 * var(--lendi-ui-size));
  padding-right: calc(1.5 * var(--lendi-ui-size));
  font-weight: 600;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-bottom: 1px solid rgba(227,227,227,1);
  padding: 0;
  list-style: none;
}

.c0:hover {
  color: rgba(255,255,255,1);
  background-color: rgba(0,192,165,1);
}

.c0:hover svg {
  stroke: rgba(255,255,255,1);
}

.c0:active {
  color: rgba(255,255,255,1);
  background-color: rgba(0,153,132,1);
}

.c0:last-type {
  border-bottom: none;
}

.c0 > a {
  border-bottom: 0;
}

.c0 > button {
  border-bottom: 0;
}

<Item
  href="#foobar"
>
  <styled.li
    role="none"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-iwsKbI",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              "
  ",
              [Function],
              " ",
              "
    padding-left: ",
              "calc(1.5 * var(--lendi-ui-size))",
              ";
    padding-right: ",
              "calc(1.5 * var(--lendi-ui-size))",
              ";
  ",
              "
  font-weight: 600;
  cursor: pointer;
  display: flex;
  align-items: center;
  border-bottom: 1px solid ",
              [Function],
              ";

  :hover {
    ",
              "
          color: ",
              [Function],
              ";
        ",
              " ",
              "
          background-color: ",
              [Function],
              ";
        ",
              ";

    svg {
      stroke: ",
              [Function],
              ";
    }
  }

  :active {
    ",
              "
          color: ",
              [Function],
              ";
        ",
              " ",
              "
          background-color: ",
              [Function],
              ";
        ",
              ";
  }

  :last-type {
    border-bottom: none;
  }
",
              ";
  padding: 0;
  list-style: none;

  > a {
    border-bottom: 0;
  }

  > button {
    border-bottom: 0;
  }
",
            ],
          },
          "displayName": "styled.li",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-iwsKbI",
          "target": "li",
          "toString": [Function],
          "usesTheme": false,
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      role="none"
    >
      <li
        className="c0"
        role="none"
      >
        <styled.a
          depth={0}
          href="#foobar"
          onClick={[Function]}
          role="menu item"
        >
          <StyledComponent
            depth={0}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  ",
                    "
  ",
                    [Function],
                    " ",
                    "
    padding-left: ",
                    "calc(1.5 * var(--lendi-ui-size))",
                    ";
    padding-right: ",
                    "calc(1.5 * var(--lendi-ui-size))",
                    ";
  ",
                    "
  font-weight: 600;
  cursor: pointer;
  display: flex;
  align-items: center;
  border-bottom: 1px solid ",
                    [Function],
                    ";

  :hover {
    ",
                    "
          color: ",
                    [Function],
                    ";
        ",
                    " ",
                    "
          background-color: ",
                    [Function],
                    ";
        ",
                    ";

    svg {
      stroke: ",
                    [Function],
                    ";
    }
  }

  :active {
    ",
                    "
          color: ",
                    [Function],
                    ";
        ",
                    " ",
                    "
          background-color: ",
                    [Function],
                    ";
        ",
                    ";
  }

  :last-type {
    border-bottom: none;
  }
",
                    ";
  text-decoration: none;
  width: 100%;
",
                  ],
                },
                "displayName": "styled.a",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": "a",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            href="#foobar"
            onClick={[Function]}
            role="menu item"
          >
            <a
              className="c1"
              href="#foobar"
              onClick={[Function]}
              role="menu item"
            >
              Foo Bar
            </a>
          </StyledComponent>
        </styled.a>
      </li>
    </StyledComponent>
  </styled.li>
</Item>
`;
