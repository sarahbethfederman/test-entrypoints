// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Body should render styles for size lg 1`] = `
.c0 {
  margin-top: 0;
  margin-bottom: 0;
  font-size: calc(1.125 * var(--lendi-ui-size));
  line-height: calc(24 / 18);
  font-family: 'Open Sans',sans-serif;
}

<styled.p
  size="lg"
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwzfXH",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  ",
            "
    margin-top: ",
            "0",
            ";
    margin-bottom: ",
            "0",
            ";
  ",
            "
  ",
            [Function],
            "
  ",
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
",
            ";
",
          ],
        },
        "displayName": "styled.p",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bwzfXH",
        "target": "p",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    size="lg"
  >
    <p
      className="c0"
      size="lg"
    />
  </StyledComponent>
</styled.p>
`;

exports[`Body should render styles for size md 1`] = `
.c0 {
  margin-top: 0;
  margin-bottom: 0;
  font-size: var(--lendi-ui-size);
  line-height: calc(24 / 16);
  font-family: 'Open Sans',sans-serif;
}

<styled.p
  size="md"
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwzfXH",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  ",
            "
    margin-top: ",
            "0",
            ";
    margin-bottom: ",
            "0",
            ";
  ",
            "
  ",
            [Function],
            "
  ",
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
",
            ";
",
          ],
        },
        "displayName": "styled.p",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bwzfXH",
        "target": "p",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    size="md"
  >
    <p
      className="c0"
      size="md"
    />
  </StyledComponent>
</styled.p>
`;

exports[`Body should render styles for size sm 1`] = `
.c0 {
  margin-top: 0;
  margin-bottom: 0;
  font-size: calc(0.875 * var(--lendi-ui-size));
  line-height: calc(20 / 14);
  font-family: 'Open Sans',sans-serif;
}

<styled.p
  size="sm"
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwzfXH",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  ",
            "
    margin-top: ",
            "0",
            ";
    margin-bottom: ",
            "0",
            ";
  ",
            "
  ",
            [Function],
            "
  ",
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
",
            ";
",
          ],
        },
        "displayName": "styled.p",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bwzfXH",
        "target": "p",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    size="sm"
  >
    <p
      className="c0"
      size="sm"
    />
  </StyledComponent>
</styled.p>
`;

exports[`Body should render styles for size undefined 1`] = `
.c0 {
  margin-top: 0;
  margin-bottom: 0;
  font-family: 'Open Sans',sans-serif;
}

<styled.p>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwzfXH",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  ",
            "
    margin-top: ",
            "0",
            ";
    margin-bottom: ",
            "0",
            ";
  ",
            "
  ",
            [Function],
            "
  ",
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
",
            ";
",
          ],
        },
        "displayName": "styled.p",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bwzfXH",
        "target": "p",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <p
      className="c0"
    />
  </StyledComponent>
</styled.p>
`;

exports[`Body should render styles for size xs 1`] = `
.c0 {
  margin-top: 0;
  margin-bottom: 0;
  font-size: calc(0.75 * var(--lendi-ui-size));
  line-height: calc(16 / 12);
  font-family: 'Open Sans',sans-serif;
}

<styled.p
  size="xs"
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwzfXH",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  ",
            "
    margin-top: ",
            "0",
            ";
    margin-bottom: ",
            "0",
            ";
  ",
            "
  ",
            [Function],
            "
  ",
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
",
            ";
",
          ],
        },
        "displayName": "styled.p",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bwzfXH",
        "target": "p",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    size="xs"
  >
    <p
      className="c0"
      size="xs"
    />
  </StyledComponent>
</styled.p>
`;

exports[`Body should render styles for size xxs 1`] = `
.c0 {
  margin-top: 0;
  margin-bottom: 0;
  font-size: calc(0.625 * var(--lendi-ui-size));
  line-height: calc(14 / 10);
  font-family: 'Open Sans',sans-serif;
}

<styled.p
  size="xxs"
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwzfXH",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  ",
            "
    margin-top: ",
            "0",
            ";
    margin-bottom: ",
            "0",
            ";
  ",
            "
  ",
            [Function],
            "
  ",
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
",
            ";
",
          ],
        },
        "displayName": "styled.p",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bwzfXH",
        "target": "p",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    size="xxs"
  >
    <p
      className="c0"
      size="xxs"
    />
  </StyledComponent>
</styled.p>
`;
