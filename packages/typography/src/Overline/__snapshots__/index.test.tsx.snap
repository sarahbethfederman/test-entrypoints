// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Overline should render styles for size "lg" 1`] = `
.c0 {
  display: block;
  font-family: 'Cabin',sans-serif;
  text-transform: uppercase;
  font-weight: 400;
  font-size: calc(0.875 * var(--lendi-ui-size));
  line-height: calc(0.875 * var(--lendi-ui-size));
  -webkit-letter-spacing: calc(calc(0.875 * var(--lendi-ui-size))/10);
  -moz-letter-spacing: calc(calc(0.875 * var(--lendi-ui-size))/10);
  -ms-letter-spacing: calc(calc(0.875 * var(--lendi-ui-size))/10);
  letter-spacing: calc(calc(0.875 * var(--lendi-ui-size))/10);
  color: rgba(146,146,146,1);
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

<Component
  size="lg"
>
  <styled.span
    size="lg"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bZQynM",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              [Function],
              ";
  ",
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
",
              ";
",
            ],
          },
          "displayName": "styled.span",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bZQynM",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      size="lg"
    >
      <span
        className="c0"
        size="lg"
      />
    </StyledComponent>
  </styled.span>
</Component>
`;

exports[`Overline should render styles for size "md" 1`] = `
.c0 {
  display: block;
  font-family: 'Cabin',sans-serif;
  text-transform: uppercase;
  font-weight: 400;
  font-size: calc(0.75 * var(--lendi-ui-size));
  line-height: calc(0.75 * var(--lendi-ui-size));
  -webkit-letter-spacing: calc(calc(0.75 * var(--lendi-ui-size))/10);
  -moz-letter-spacing: calc(calc(0.75 * var(--lendi-ui-size))/10);
  -ms-letter-spacing: calc(calc(0.75 * var(--lendi-ui-size))/10);
  letter-spacing: calc(calc(0.75 * var(--lendi-ui-size))/10);
  color: rgba(146,146,146,1);
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

<Component
  size="md"
>
  <styled.span
    size="md"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bZQynM",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              [Function],
              ";
  ",
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
",
              ";
",
            ],
          },
          "displayName": "styled.span",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bZQynM",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      size="md"
    >
      <span
        className="c0"
        size="md"
      />
    </StyledComponent>
  </styled.span>
</Component>
`;

exports[`Overline should render styles for size "sm" 1`] = `
.c0 {
  display: block;
  font-family: 'Cabin',sans-serif;
  text-transform: uppercase;
  font-weight: 400;
  font-size: calc(0.625 * var(--lendi-ui-size));
  line-height: calc(0.625 * var(--lendi-ui-size));
  -webkit-letter-spacing: calc(calc(0.625 * var(--lendi-ui-size))/10);
  -moz-letter-spacing: calc(calc(0.625 * var(--lendi-ui-size))/10);
  -ms-letter-spacing: calc(calc(0.625 * var(--lendi-ui-size))/10);
  letter-spacing: calc(calc(0.625 * var(--lendi-ui-size))/10);
  color: rgba(146,146,146,1);
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

<Component
  size="sm"
>
  <styled.span
    size="sm"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bZQynM",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              [Function],
              ";
  ",
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
",
              ";
",
            ],
          },
          "displayName": "styled.span",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bZQynM",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      size="sm"
    >
      <span
        className="c0"
        size="sm"
      />
    </StyledComponent>
  </styled.span>
</Component>
`;

exports[`Overline should render styles for size "xl" 1`] = `
.c0 {
  display: block;
  font-family: 'Cabin',sans-serif;
  text-transform: uppercase;
  font-weight: 400;
  font-size: var(--lendi-ui-size);
  line-height: var(--lendi-ui-size);
  -webkit-letter-spacing: calc(var(--lendi-ui-size)/10);
  -moz-letter-spacing: calc(var(--lendi-ui-size)/10);
  -ms-letter-spacing: calc(var(--lendi-ui-size)/10);
  letter-spacing: calc(var(--lendi-ui-size)/10);
  color: rgba(146,146,146,1);
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

<Component
  size="xl"
>
  <styled.span
    size="xl"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bZQynM",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              [Function],
              ";
  ",
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
",
              ";
",
            ],
          },
          "displayName": "styled.span",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bZQynM",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      size="xl"
    >
      <span
        className="c0"
        size="xl"
      />
    </StyledComponent>
  </styled.span>
</Component>
`;

exports[`Overline should render styles for size "xs" 1`] = `
.c0 {
  display: block;
  font-family: 'Cabin',sans-serif;
  text-transform: uppercase;
  font-weight: 400;
  font-size: calc(0.625 * var(--lendi-ui-size));
  line-height: calc(0.625 * var(--lendi-ui-size));
  -webkit-letter-spacing: calc(calc(0.625 * var(--lendi-ui-size))/10);
  -moz-letter-spacing: calc(calc(0.625 * var(--lendi-ui-size))/10);
  -ms-letter-spacing: calc(calc(0.625 * var(--lendi-ui-size))/10);
  letter-spacing: calc(calc(0.625 * var(--lendi-ui-size))/10);
  color: rgba(146,146,146,1);
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

<Component
  size="xs"
>
  <styled.span
    size="xs"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bZQynM",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              [Function],
              ";
  ",
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
",
              ";
",
            ],
          },
          "displayName": "styled.span",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bZQynM",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      size="xs"
    >
      <span
        className="c0"
        size="xs"
      />
    </StyledComponent>
  </styled.span>
</Component>
`;

exports[`Overline should render styles for size "xxs" 1`] = `
.c0 {
  display: block;
  font-family: 'Cabin',sans-serif;
  text-transform: uppercase;
  font-weight: 400;
  font-size: calc(0.625 * var(--lendi-ui-size));
  line-height: calc(0.625 * var(--lendi-ui-size));
  -webkit-letter-spacing: calc(calc(0.625 * var(--lendi-ui-size))/10);
  -moz-letter-spacing: calc(calc(0.625 * var(--lendi-ui-size))/10);
  -ms-letter-spacing: calc(calc(0.625 * var(--lendi-ui-size))/10);
  letter-spacing: calc(calc(0.625 * var(--lendi-ui-size))/10);
  color: rgba(146,146,146,1);
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

<Component
  size="xxs"
>
  <styled.span
    size="xxs"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bZQynM",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              [Function],
              ";
  ",
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
",
              ";
",
            ],
          },
          "displayName": "styled.span",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bZQynM",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      size="xxs"
    >
      <span
        className="c0"
        size="xxs"
      />
    </StyledComponent>
  </styled.span>
</Component>
`;
