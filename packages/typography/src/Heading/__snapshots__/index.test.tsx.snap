// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Heading should render styles for size "lg" 1`] = `
.c0 {
  margin-top: 0;
  margin-bottom: 0;
  font-size: calc(2.3125 * var(--lendi-ui-size));
  font-weight: 400;
  line-height: calc(40 / 37);
  font-family: 'Cabin',sans-serif;
}

<Styled(HeadingTag)
  size="lg"
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htpNat",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  ",
            "
    margin-top: ",
            "0",
            ";
    margin-bottom: ",
            "0",
            ";
  ",
            "
  ",
            [Function],
            "
  ",
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
",
            ";
",
          ],
        },
        "displayName": "Styled(HeadingTag)",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-htpNat",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
    size="lg"
  >
    <HeadingTag
      className="c0"
      size="lg"
    >
      <h2
        className="c0"
        size="lg"
      />
    </HeadingTag>
  </StyledComponent>
</Styled(HeadingTag)>
`;

exports[`Heading should render styles for size "md" 1`] = `
.c0 {
  margin-top: 0;
  margin-bottom: 0;
  font-size: calc(1.75 * var(--lendi-ui-size));
  font-weight: 400;
  line-height: calc(32 / 28);
  font-family: 'Cabin',sans-serif;
}

<Styled(HeadingTag)
  size="md"
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htpNat",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  ",
            "
    margin-top: ",
            "0",
            ";
    margin-bottom: ",
            "0",
            ";
  ",
            "
  ",
            [Function],
            "
  ",
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
",
            ";
",
          ],
        },
        "displayName": "Styled(HeadingTag)",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-htpNat",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
    size="md"
  >
    <HeadingTag
      className="c0"
      size="md"
    >
      <h3
        className="c0"
        size="md"
      />
    </HeadingTag>
  </StyledComponent>
</Styled(HeadingTag)>
`;

exports[`Heading should render styles for size "sm" 1`] = `
.c0 {
  margin-top: 0;
  margin-bottom: 0;
  font-size: calc(1.375 * var(--lendi-ui-size));
  font-weight: 400;
  line-height: calc(28 / 22);
  font-family: 'Cabin',sans-serif;
}

<Styled(HeadingTag)
  size="sm"
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htpNat",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  ",
            "
    margin-top: ",
            "0",
            ";
    margin-bottom: ",
            "0",
            ";
  ",
            "
  ",
            [Function],
            "
  ",
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
",
            ";
",
          ],
        },
        "displayName": "Styled(HeadingTag)",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-htpNat",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
    size="sm"
  >
    <HeadingTag
      className="c0"
      size="sm"
    >
      <h4
        className="c0"
        size="sm"
      />
    </HeadingTag>
  </StyledComponent>
</Styled(HeadingTag)>
`;

exports[`Heading should render styles for size "xl" 1`] = `
.c0 {
  margin-top: 0;
  margin-bottom: 0;
  font-size: calc(2.875 * var(--lendi-ui-size));
  font-weight: 700;
  line-height: calc(50 / 46);
  font-family: 'Cabin',sans-serif;
}

<Styled(HeadingTag)
  size="xl"
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htpNat",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  ",
            "
    margin-top: ",
            "0",
            ";
    margin-bottom: ",
            "0",
            ";
  ",
            "
  ",
            [Function],
            "
  ",
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
",
            ";
",
          ],
        },
        "displayName": "Styled(HeadingTag)",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-htpNat",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
    size="xl"
  >
    <HeadingTag
      className="c0"
      size="xl"
    >
      <h1
        className="c0"
        size="xl"
      />
    </HeadingTag>
  </StyledComponent>
</Styled(HeadingTag)>
`;

exports[`Heading should render styles for size "xs" 1`] = `
.c0 {
  margin-top: 0;
  margin-bottom: 0;
  font-size: calc(1.125 * var(--lendi-ui-size));
  font-weight: 400;
  line-height: calc(24 / 18);
  font-family: 'Cabin',sans-serif;
}

<Styled(HeadingTag)
  size="xs"
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htpNat",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  ",
            "
    margin-top: ",
            "0",
            ";
    margin-bottom: ",
            "0",
            ";
  ",
            "
  ",
            [Function],
            "
  ",
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
",
            ";
",
          ],
        },
        "displayName": "Styled(HeadingTag)",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-htpNat",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
    size="xs"
  >
    <HeadingTag
      className="c0"
      size="xs"
    >
      <h5
        className="c0"
        size="xs"
      />
    </HeadingTag>
  </StyledComponent>
</Styled(HeadingTag)>
`;

exports[`Heading should render styles for size "xxs" 1`] = `
.c0 {
  margin-top: 0;
  margin-bottom: 0;
  font-size: calc(0.875 * var(--lendi-ui-size));
  font-weight: 400;
  line-height: calc(20 / 14);
  font-family: 'Cabin',sans-serif;
}

<Styled(HeadingTag)
  size="xxs"
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htpNat",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  ",
            "
    margin-top: ",
            "0",
            ";
    margin-bottom: ",
            "0",
            ";
  ",
            "
  ",
            [Function],
            "
  ",
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
  ",
            [Function],
            "
",
            ";
",
          ],
        },
        "displayName": "Styled(HeadingTag)",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-htpNat",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
    size="xxs"
  >
    <HeadingTag
      className="c0"
      size="xxs"
    >
      <h6
        className="c0"
        size="xxs"
      />
    </HeadingTag>
  </StyledComponent>
</Styled(HeadingTag)>
`;
